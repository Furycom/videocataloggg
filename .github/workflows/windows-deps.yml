name: Windows dependencies

on:
  push:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  pull_request:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  workflow_dispatch:

jobs:
  lock:
    name: Lock dependencies (${{ matrix.profile }})
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Disable line ending conversion
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Verify Python version
        run: python -c "import sys; assert sys.version_info[:2]==(3,12)"
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Upgrade pip tooling
        run: .\.venv\Scripts\python -m pip install --upgrade pip setuptools wheel
      - name: Install pip-tools
        run: .\.venv\Scripts\python -m pip install pip-tools
      - name: Compile Windows CPU lock
        if: matrix.profile == 'cpu'
        run: .\.venv\Scripts\pip-compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --only-binary=:all: -o profiles/windows-cpu.txt profiles/windows-cpu.in
      - name: Compile Windows GPU lock
        if: matrix.profile == 'gpu'
        run: .\.venv\Scripts\pip-compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --only-binary=:all: --pip-args "--extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121" -o profiles/windows-gpu.txt profiles/windows-gpu.in
      - name: Verify lock file committed
        run: |
          $target = if ('${{ matrix.profile }}' -eq 'cpu') { 'profiles/windows-cpu.txt' } else { 'profiles/windows-gpu.txt' }
          if (-not (Test-Path $target)) {
            Write-Error "Expected $target to exist after compilation."
            exit 1
          }
          $diff = git diff --unified=100000 -- $target
          if ($diff) {
            Write-Host "First 20 diff lines:"
            Write-Host (($diff -split "`n" | Select-Object -First 20) -join "`n")
            Write-Host "..."
            Write-Host "Last 20 diff lines:"
            Write-Host (($diff -split "`n" | Select-Object -Last 20) -join "`n")
            exit 1
          }

  install:
    name: Install from locks (${{ matrix.profile }})
    needs: lock
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Verify Python version
        run: python -c "import sys; assert sys.version_info[:2]==(3,12)"
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Install shared requirements
        run: .\.venv\Scripts\python -m pip install --disable-pip-version-check --only-binary=:all: --require-hashes -r requirements.txt
      - name: Install Windows CPU lock
        if: matrix.profile == 'cpu'
        run: .\.venv\Scripts\python -m pip install --disable-pip-version-check --only-binary=:all: --require-hashes -r profiles/windows-cpu.txt
      - name: Install Windows GPU lock
        if: matrix.profile == 'gpu'
        run: .\.venv\Scripts\python -m pip install --disable-pip-version-check --only-binary=:all: --require-hashes --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121 -r profiles/windows-gpu.txt
      - name: Smoke import
        run: .\.venv\Scripts\python -c "import fastapi, uvicorn; print('ok')"
