name: Windows dependencies

on:
  push:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  pull_request:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  workflow_dispatch:

jobs:
  lock:
    name: Lock dependencies (${{ matrix.profile }})
    runs-on: windows-latest
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Disable line ending conversion
        run: git config --global core.autocrlf false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Install pip-tools
        run: .\.venv\Scripts\python -m pip install --upgrade pip pip-tools
      - name: Compile runtime lock
        env:
          PIP_ONLY_BINARY: ':all:'
        run: .\.venv\Scripts\python -m piptools compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --output-file requirements.txt requirements.in
      - name: Compile dev lock
        env:
          PIP_ONLY_BINARY: ':all:'
        run: .\.venv\Scripts\python -m piptools compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --output-file requirements-dev.txt requirements-dev.in
      - name: Compile Windows CPU lock
        env:
          PIP_ONLY_BINARY: ':all:'
        run: .\.venv\Scripts\python -m piptools compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --output-file profiles/windows-cpu.txt profiles/windows-cpu.in
      - name: Compile Windows GPU lock
        env:
          PIP_ONLY_BINARY: ':all:'
        run: .\.venv\Scripts\python -m piptools compile --resolver=backtracking --allow-unsafe --strip-extras --generate-hashes --pip-args "--extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121" --output-file profiles/windows-gpu.txt profiles/windows-gpu.in
      - name: Verify lockfiles unchanged
        run: |
          git diff --stat -- requirements.txt requirements-dev.txt profiles/windows-cpu.txt profiles/windows-gpu.txt
          git diff --exit-code -- requirements.txt requirements-dev.txt profiles/windows-cpu.txt profiles/windows-gpu.txt || (
            echo "::error::Lockfiles drifted. Run pip-compile on Windows and commit the results." && exit 1
          )

  install:
    name: Install from locks (${{ matrix.profile }})
    needs: lock
    runs-on: windows-latest
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Install Windows CPU lock
        if: matrix.profile == 'cpu'
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --disable-pip-version-check --only-binary=:all: --require-hashes -r profiles/windows-cpu.txt
      - name: Install Windows GPU lock
        if: matrix.profile == 'gpu'
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --disable-pip-version-check --only-binary=:all: --require-hashes --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121 -r profiles/windows-gpu.txt
      - name: Smoke import
        run: |
          .\.venv\Scripts\Activate.ps1
          python -c "import fastapi, uvicorn; print('ok')"
