name: Windows dependencies

on:
  push:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  pull_request:
    paths:
      - 'requirements.in'
      - 'requirements-dev.in'
      - 'profiles/**'
      - '.github/workflows/windows-deps.yml'
  workflow_dispatch:

jobs:
  lock:
    name: Lock dependencies (${{ matrix.profile }})
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      MATRIX_PROFILE: ${{ matrix.profile }}
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Disable line ending conversion
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: astral-sh/setup-uv@v2
      - name: Compile lockfiles
        run: |
          function Assert-LockClean {
            param([string]$Target, [string]$ErrorMessage)

            if (-not (Test-Path $Target)) {
              Write-Error "Expected $Target to exist after compilation."
              exit 1
            }

            $diff = git diff --unified=5 -- $Target
            if ($diff) {
              git --no-pager diff --stat -- $Target
              git --no-pager diff --unified=5 -- $Target
              Write-Error $ErrorMessage
              exit 1
            }
          }

          uv venv .venv
          $Env:VIRTUAL_ENV = "${{ github.workspace }}\.venv"
          $Env:Path = "${{ github.workspace }}\.venv\Scripts;$Env:Path"

          if ($Env:MATRIX_PROFILE -eq 'cpu') {
            uv pip compile --resolver=backtracking --generate-hashes --only-binary=:all: -o requirements.txt requirements.in
            Assert-LockClean -Target 'requirements.txt' -ErrorMessage 'requirements.txt is out of date. Regenerate it on Windows with Python 3.12 and commit the result.'

            uv pip compile --resolver=backtracking --generate-hashes --only-binary=:all: -o requirements-dev.txt requirements-dev.in
            Assert-LockClean -Target 'requirements-dev.txt' -ErrorMessage 'requirements-dev.txt is out of date. Regenerate it on Windows with Python 3.12 and commit the result.'

            uv pip compile --resolver=backtracking --generate-hashes --only-binary=:all: -o profiles/windows-cpu.txt profiles/windows-cpu.in
            Assert-LockClean -Target 'profiles/windows-cpu.txt' -ErrorMessage 'Windows CPU lockfile is out of date. Regenerate it on Windows with Python 3.12 and commit the result.'
          } else {
            uv pip compile --resolver=backtracking --generate-hashes --only-binary=:all: --pip-args "--extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121" -o profiles/windows-gpu.txt profiles/windows-gpu.in
            Assert-LockClean -Target 'profiles/windows-gpu.txt' -ErrorMessage 'Windows GPU lockfile is out of date. Regenerate it on Windows with Python 3.12 and commit the result.'
          }

  install:
    name: Install from locks (${{ matrix.profile }})
    needs: lock
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    strategy:
      matrix:
        profile: [cpu, gpu]
    env:
      MATRIX_PROFILE: ${{ matrix.profile }}
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: astral-sh/setup-uv@v2
      - name: Sync dependencies
        run: |
          uv venv .venv
          $Env:VIRTUAL_ENV = "${{ github.workspace }}\.venv"
          $Env:Path = "${{ github.workspace }}\.venv\Scripts;$Env:Path"

          uv pip sync --frozen --only-binary=:all: --require-hashes -r requirements.txt

          if ($Env:MATRIX_PROFILE -eq 'gpu') {
            uv pip sync --frozen --only-binary=:all: --require-hashes --pip-args "--extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu121" -r profiles/windows-gpu.txt
          } else {
            uv pip sync --frozen --only-binary=:all: --require-hashes -r profiles/windows-cpu.txt
          }

          python -c "import fastapi, uvicorn; print('ok')"
